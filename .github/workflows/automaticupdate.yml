name: Python CI

on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        default: false
      environment:
        type: choice
        options: [development, production]
        default: 'development'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: List directory structure (Debug)
      run: ls -R

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest tests/ --cov=code/ --cov-report=xml  # Ajusta la ruta si es necesario

    - name: Run Python scripts
      run: |
        set -e
        for file in code/*.py; do
          echo "Running $file"
          python "$file" || { echo "Error in $file"; exit 1; }
        done
      shell: bash

    - name: Generate timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git diff --quiet && git diff --staged --quiet || (
          git commit -m "Auto update: ${{ steps.timestamp.outputs.timestamp }}

          Environment: ${{ github.event.inputs.environment }}
          Triggered by: ${{ github.event_name }}"
          git push
        )
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload coverage report
      uses: actions/upload-artifact@v4   # Updated from v3
      with:
        name: coverage-report
        path: coverage.xml

    - name: Upload artifacts
      uses: actions/upload-artifact@v4    # Already at v4
      with:
        name: script-outputs-${{ steps.timestamp.outputs.timestamp }}
        path: code/
        retention-days: 5

    - name: Status check
      if: always()
      run: |
        if [[ "${{ job.status }}" == "success" ]]; then
          echo "✅ Workflow completed successfully"
        else
          echo "❌ Workflow failed"
          exit 1
        fi